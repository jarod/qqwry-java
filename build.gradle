plugins {
    id 'java-library'
    id 'jacoco'
    id 'maven-publish'
    id 'signing'
}

sourceCompatibility = 1.8
group = 'com.github.jarod'
archivesBaseName = 'qqwry-java'
version = '0.10.1'


jacoco {
    toolVersion = "0.8.11"
}

repositories {
    mavenCentral()
}

dependencies {
    def junitJupiterVersion = '5.9.3'

    testImplementation(
            "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}",
    )
    testRuntimeOnly(
            "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}",
    )
}

test {
    useJUnitPlatform {
        excludeTags 'slow'
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.java
    classifier = 'sources'
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'qqwry-java'
                description = 'A java library to read QQWry IP database.'
                url = 'https://github.com/jarod/qqwry-java'
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://github.com/jarod/qqwry-java/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'jarod_liu'
                        name = 'Jarod Liu'
                        email = 'liuyuanzhi@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/jarod/qqwry-java.git'
                    developerConnection = 'scm:git:git@github.com:jarod/qqwry-java.git'
                    url = 'https://github.com/jarod/qqwry-java'
                }
            }
        }
    }

    repositories {
        maven {
            url = version.endsWith('SNAPSHOT') ? repoSnapshotUrl : repoReleaseUrl
            credentials {
                username = repoUsername
                password = repoPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}